buildscript {
  repositories {
    mavenLocal()
    jcenter()
  }
}
plugins {
  id 'io.spring.dependency-management' version "$springDependencyManagementVersion"
  id 'org.springframework.boot' version "$springBootVersion"
}

apply plugin: 'eclipse'
apply plugin: 'java'

group = 'com.foilen'
version = System.getenv('VERSION')?:'master-SNAPSHOT'

repositories {
  mavenLocal()
  jcenter()
  mavenCentral()
}

sourceCompatibility = 11
targetCompatibility = 11

eclipse {
  classpath {
    downloadSources = true
    downloadJavadoc = true
  }
}

dependencies {

  // Internal API
  compile "com.foilen:foilen-login-api:$foilenLoginApiVersion"

  // Databases
  compile "mysql:mysql-connector-java"
  compile "org.springframework.boot:spring-boot-starter-data-jpa"
  compile "org.springframework.boot:spring-boot-starter-jdbc"
  
  // Emails
  compile 'com.sun.mail:javax.mail:1.6.2'
  compile 'javax.activation:activation'

  // Web
  compile "org.springframework.boot:spring-boot-starter-freemarker"
  compile "org.springframework.boot:spring-boot-starter-web"
  compile "org.webjars:bootstrap:3.3.7-1"

  // Networking
  compile "io.netty:netty-all:$nettyVersion"

  // Spring
  compile "org.springframework:spring-context"
  compile 'org.springframework.security:spring-security-web'

  // Misc
  compile "args4j:args4j:$argsVersion"
  compile "commons-validator:commons-validator:$commonsValidatorVersion"
  compile "com.google.guava:guava:25.1-jre"

  // Test
  testCompile 'junit:junit'
  testCompile "com.h2database:h2"
  testImplementation "org.junit.jupiter:junit-jupiter-api"
  testRuntimeOnly "org.junit.vintage:junit-vintage-engine"
  testCompile 'org.junit.platform:junit-platform-commons'
  testCompile 'org.junit.platform:junit-platform-engine'
  testCompile "org.springframework:spring-test"
  testCompile "org.springframework.boot:spring-boot-starter-test"
}

test {
  useJUnitPlatform()
}


apply plugin: 'application'
mainClassName = 'com.foilen.login.LoginApp'
jar {
  enabled = true
}

bootJar {
 classifier = 'boot'
}
